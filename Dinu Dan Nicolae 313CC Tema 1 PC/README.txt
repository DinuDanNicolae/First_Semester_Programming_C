       Problema 1 - Implementarea acestei probleme a durat aproximativ 4 ore. Programul retine vectorul de perechi de cuvinte intr-o structura de date neomogena, care are campurile primul cuvant, al doilea si gradul perechii. Programul foloseste 5 functii pentru a stabili daca doua siruri de caractere sunt anagrame, a calcula scorul unei perechi de anagrame, a sorta vectorul de perechi dupa grad, a sorta perechile de acelasi grad descrescator lexicographic si pentru a interschimba valorile a doua perechi.
       Problema 2 - Implementarea acestei probleme a durat 5 ore. Programul retine coordonatele pe table de joc ale fiecarui nebun in parte, cat si daca are pereche sau nu intr-o structura de date neomogena. Programul foloseste functii pentru a cauta perechile unui nebun, cat si pentru a verifica posibilele mutari ale nebunilor care au pereche.
       Problema 4 – Implementarea acestei probleme a durat 6 ore. Programul genereaza matricea initiala folosind o functie care transforma un numar dat ca parametru in baza binara si il retine ca sir de caractere. Apoi, programul calculeaza transpusa matricei initiale folosind o functie cu acest scop. Folosind o functie care inmulteste doua matrici conform logicii boolene, programul calculeaza patratul metricii initiale, cat si produsul dintre aceasta si transpusa ei. Cu ajutorul unei functii care calculeaza scorul unei matrice in functie de regulile precizate, aplicatia decide care matrice are scorul cel mai mare, ulterior fiind afisata sub forma zecimala. 
       
